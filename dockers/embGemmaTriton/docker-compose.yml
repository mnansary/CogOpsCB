# ~/triton-server/docker-compose.yml
# A robust, conflict-free setup for the Triton Inference Server.

services:
  triton:
    # --- Base Configuration (from your 'docker run' command) ---
    image: nvcr.io/nvidia/tritonserver:25.05-py3
    container_name: embgemmatriton
    # This command is passed to the container on startup
    command: tritonserver --model-repository=/models
    volumes:
      # Maps your local model repository into the container
      - ~/triton_repo:/models:ro # ':ro' makes the volume read-only for added safety
    ports:
      - "6000:8000" # HTTP
      - "6001:8001" # gRPC
      - "6002:8002" # Metrics
      # We bind to 127.0.0.1 (localhost) for security, preventing network exposure.
      # If you need to access it from other machines, change to "6000:8000", etc.

    # --- GPU Access ---
    # This is the Docker Compose equivalent of '--gpus all'
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

    # --- NEW: Stability and Health Monitoring ---
    # Automatic Restart Policy: Restarts the container unless you manually stop it.
    restart: unless-stopped

    # Health Check: Docker will periodically check if Triton is responsive.
    healthcheck:
      # Queries the standard Triton health endpoint.
      test: ["CMD", "curl", "-f", "http://localhost:8000/v2/health/ready"]
      interval: 15s      # Check every 15 seconds
      timeout: 10s       # Wait up to 10 seconds for a response
      retries: 5         # Try 5 times before marking as unhealthy
      start_period: 60s  # Give the server 60 seconds to start up before the first check

    # --- NEW: Conflict-Free Networking ---
    # Connects this service to our custom network defined below.
    networks:
      - triton-net

# --- Custom Network Definition to Avoid Conflicts ---
networks:
  triton-net:
    driver: bridge
    ipam:
      driver: default
      config:
        # We define a custom subnet that is very unlikely to conflict with VPNs or other networks.
        - subnet: "10.57.0.0/24"