# /database/chromadb/docker-compose.yml
# A ROBUST AND CONFLICT-FREE CHROMA DEPLOYMENT

version: "3.9"

services:
  chroma:
    image: "chromadb/chroma:0.5.3"
    container_name: chroma_local_dev
    restart: unless-stopped

    # --- Port Mapping ---
    # Binds the container's internal port 8000 to port 8443 on your local machine.
    # The '127.0.0.1' ensures it is only accessible from your computer, not the wider network.
    ports:
      - "127.0.0.1:8443:8000"

    # --- Data Persistence ---
    # Maps a folder named 'chroma_data' in your current directory to the data directory inside the container.
    # This ensures your database data persists even if the container is removed.
    volumes:
      - ./chroma_data:/chroma/chroma

    environment:
      - IS_PERSISTENT=TRUE
      - ALLOW_RESET=TRUE

    healthcheck:
      # This check runs inside the container and confirms the service is responsive.
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 15s
      timeout: 5s
      retries: 5

    # --- Custom Networking ---
    # Connects this service to our conflict-free network defined below.
    networks:
      - chroma-net

# --- Conflict-Free Network Definition ---
networks:
  chroma-net:
    driver: bridge
    ipam: # IP Address Management
      driver: default
      config:
        # We define a custom subnet in the 10.x.x.x range to avoid conflicts
        # with common VPN (172.x) and home (192.168.x) networks.
        - subnet: "10.10.1.0/24"
          gateway: "10.10.1.1"
